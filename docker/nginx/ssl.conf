# HTTPからHTTPSへリダイレクトするためのサーバーブロック
server {
    listen 80;
    server_name test.com;
    return 301 https://192.168.80.34:8080;
}

# HTTPS用のサーバーブロック
server {
    listen 443 ssl http2;
    server_name test.com;

    root /var/www/html/public;
    index index.php index.html;
    client_max_body_size 30M;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_password_file /etc/nginx/ssl/server.password;

    # SSLセキュリティ強化のための追加設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM";
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # リクエストヘッダーのサイズを拡張(Auth0のトークンが大きい)
    large_client_header_buffers 4 32k;

    # 通常のリクエスト処理
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # PHP処理
    location ~ \.php$ {
        fastcgi_pass                  app:9000;
        fastcgi_index                 /index.php;
        include                       /etc/nginx/fastcgi_params;
        fastcgi_split_path_info       ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Security headers
        add_header X-Content-Type-Options "nosniff";
        # add_header X-XSS-Protection "1; mode=block";
        # add_header X-Frame-Options "SAMEORIGIN";
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Authorization, Accept, Content-Type, *';
        add_header Access-Control-Allow-Credentials "true";
    }

    # プロキシ設定（開発サーバー用）
    location /devserver/ {
        proxy_pass https://app-laravel_vue:5173/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ヘルスチェック
    location /healthcheck.html {
        satisfy any;
        allow   all;
    }
}
